                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _display_off
                                     13 	.globl _wait_vbl_done
                                     14 	.globl _smileyFace
                                     15 	.globl _requestData
                                     16 	.globl _spriteAttributes
                                     17 	.globl _InputData
                                     18 	.globl _tilemap
                                     19 	.globl _pallets
                                     20 	.globl _vram
                                     21 	.globl _mouseData1
                                     22 	.globl _smileyFaceData
                                     23 	.globl _mapData
                                     24 	.globl _paletteData
                                     25 ;--------------------------------------------------------
                                     26 ; special function registers
                                     27 ;--------------------------------------------------------
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DATA
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _INITIALIZED
      000000                         36 _vram::
      000000                         37 	.ds 2
      000002                         38 _pallets::
      000002                         39 	.ds 2
      000004                         40 _tilemap::
      000004                         41 	.ds 2
      000006                         42 _InputData::
      000006                         43 	.ds 2
      000008                         44 _spriteAttributes::
      000008                         45 	.ds 2
      00000A                         46 _requestData::
      00000A                         47 	.ds 2
      00000C                         48 _smileyFace::
      00000C                         49 	.ds 4
                                     50 ;--------------------------------------------------------
                                     51 ; absolute external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area _DABS (ABS)
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area _HOME
                                     58 	.area _GSINIT
                                     59 	.area _GSFINAL
                                     60 	.area _GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area _HOME
                                     65 	.area _HOME
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area _CODE
                                     70 ;main.c:40: void main() {
                                     71 ;	---------------------------------
                                     72 ; Function main
                                     73 ; ---------------------------------
      000000                         74 _main::
                                     75 ;c:\gbdk\include\gb\gb.h:754: __asm__("di");
      000000 F3               [ 4]   76 	di
                                     77 ;main.c:45: DISPLAY_OFF;    // GBDK macro
      000001 CDr00r00         [24]   78 	call	_display_off
                                     79 ;main.c:46: LCDC_REG = 0x47;   // Set some hardware registers for various things like enabling background
      000004 3E 47            [ 8]   80 	ld	a, #0x47
      000006 E0r00            [12]   81 	ldh	(_LCDC_REG + 0), a
                                     82 ;main.c:47: BGP_REG = OBP0_REG = OBP1_REG = 0xE4U;// Set the palette to binary: 11100100 or all 4 colors
      000008 3E E4            [ 8]   83 	ld	a, #0xe4
      00000A E0r00            [12]   84 	ldh	(_OBP1_REG + 0), a
      00000C 3E E4            [ 8]   85 	ld	a, #0xe4
      00000E E0r00            [12]   86 	ldh	(_OBP0_REG + 0), a
      000010 3E E4            [ 8]   87 	ld	a, #0xe4
      000012 E0r00            [12]   88 	ldh	(_BGP_REG + 0), a
                                     89 ;main.c:55: for(idx=0; idx < 0x40; idx++)
      000014 01 00 00         [12]   90 	ld	bc, #0x0000
      000017                         91 00108$:
                                     92 ;main.c:56: *(unsigned char*)(vram+idx) = smileyFaceData[idx];   //write sprite data to memory
      000017 79               [ 4]   93 	ld	a, c
      000018 21r00r00         [12]   94 	ld	hl, #_vram
      00001B 86               [ 8]   95 	add	a, (hl)
      00001C 23               [ 8]   96 	inc	hl
      00001D 5F               [ 4]   97 	ld	e, a
      00001E 78               [ 4]   98 	ld	a, b
      00001F 8E               [ 8]   99 	adc	a, (hl)
      000020 57               [ 4]  100 	ld	d, a
      000021 21r7Ar00         [12]  101 	ld	hl, #_smileyFaceData
      000024 09               [ 8]  102 	add	hl, bc
      000025 7E               [ 8]  103 	ld	a, (hl)
      000026 12               [ 8]  104 	ld	(de), a
                                    105 ;main.c:55: for(idx=0; idx < 0x40; idx++)
      000027 03               [ 8]  106 	inc	bc
      000028 79               [ 4]  107 	ld	a, c
      000029 D6 40            [ 8]  108 	sub	a, #0x40
      00002B 78               [ 4]  109 	ld	a, b
      00002C DE 00            [ 8]  110 	sbc	a, #0x00
      00002E 38 E7            [12]  111 	jr	C, 00108$
                                    112 ;main.c:58: DISPLAY_ON;    // GBDK macro
      000030 F0r00            [12]  113 	ldh	a, (_LCDC_REG + 0)
      000032 F6 80            [ 8]  114 	or	a, #0x80
      000034 E0r00            [12]  115 	ldh	(_LCDC_REG + 0), a
                                    116 ;c:\gbdk\include\gb\gb.h:738: __asm__("ei");
      000036 FB               [ 4]  117 	ei
                                    118 ;main.c:92: for(idx=0; idx < 4; idx++)
      000037                        119 00116$:
      000037 01 00 00         [12]  120 	ld	bc, #0x0000
      00003A                        121 00110$:
                                    122 ;main.c:93: *(unsigned char*)(spriteAttributes+idx) = smileyFace[idx]; //set sprite attributes
      00003A 79               [ 4]  123 	ld	a, c
      00003B 21r08r00         [12]  124 	ld	hl, #_spriteAttributes
      00003E 86               [ 8]  125 	add	a, (hl)
      00003F 23               [ 8]  126 	inc	hl
      000040 5F               [ 4]  127 	ld	e, a
      000041 78               [ 4]  128 	ld	a, b
      000042 8E               [ 8]  129 	adc	a, (hl)
      000043 57               [ 4]  130 	ld	d, a
      000044 21r0Cr00         [12]  131 	ld	hl, #_smileyFace
      000047 09               [ 8]  132 	add	hl, bc
      000048 7E               [ 8]  133 	ld	a, (hl)
      000049 12               [ 8]  134 	ld	(de), a
                                    135 ;main.c:92: for(idx=0; idx < 4; idx++)
      00004A 03               [ 8]  136 	inc	bc
      00004B 79               [ 4]  137 	ld	a, c
      00004C D6 04            [ 8]  138 	sub	a, #0x04
      00004E 78               [ 4]  139 	ld	a, b
      00004F DE 00            [ 8]  140 	sbc	a, #0x00
      000051 38 E7            [12]  141 	jr	C, 00110$
                                    142 ;main.c:95: wait_vbl_done();    // wait for VBlank
      000053 CDr00r00         [24]  143 	call	_wait_vbl_done
                                    144 ;main.c:97: }
      000056 18 DF            [12]  145 	jr	00116$
      000058                        146 _paletteData:
      000058 00                     147 	.db #0x00	; 0
      000059 FF                     148 	.db #0xff	; 255
      00005A 40                     149 	.db #0x40	; 64
      00005B 91                     150 	.db #0x91	; 145
      00005C 68                     151 	.db #0x68	; 104	'h'
      00005D 91                     152 	.db #0x91	; 145
      00005E 00                     153 	.db #0x00	; 0
      00005F FF                     154 	.db #0xff	; 255
      000060 64                     155 	.db #0x64	; 100	'd'
      000061 89                     156 	.db #0x89	; 137
      000062 36                     157 	.db #0x36	; 54	'6'
      000063 C9                     158 	.db #0xc9	; 201
      000064 16                     159 	.db #0x16	; 22
      000065 E9                     160 	.db #0xe9	; 233
      000066 00                     161 	.db #0x00	; 0
      000067 FF                     162 	.db #0xff	; 255
      000068                        163 _mapData:
      000068 00                     164 	.db #0x00	; 0
      000069 00                     165 	.db #0x00	; 0
      00006A 00                     166 	.db #0x00	; 0
      00006B 00                     167 	.db #0x00	; 0
      00006C 00                     168 	.db #0x00	; 0
      00006D 00                     169 	.db #0x00	; 0
      00006E 00                     170 	.db #0x00	; 0
      00006F 00                     171 	.db #0x00	; 0
      000070 00                     172 	.db #0x00	; 0
      000071 00                     173 	.db #0x00	; 0
      000072 00                     174 	.db #0x00	; 0
      000073 00                     175 	.db #0x00	; 0
      000074 FF                     176 	.db #0xff	; 255
      000075 FF                     177 	.db #0xff	; 255
      000076 00                     178 	.db #0x00	; 0
      000077 00                     179 	.db #0x00	; 0
      000078 00                     180 	.db #0x00	; 0
      000079 00                     181 	.db #0x00	; 0
      00007A                        182 _smileyFaceData:
      00007A 7A                     183 	.db #0x7a	; 122	'z'
      00007B 7E                     184 	.db #0x7e	; 126
      00007C FF                     185 	.db #0xff	; 255
      00007D E5                     186 	.db #0xe5	; 229
      00007E FE                     187 	.db #0xfe	; 254
      00007F C3                     188 	.db #0xc3	; 195
      000080 BF                     189 	.db #0xbf	; 191
      000081 E9                     190 	.db #0xe9	; 233
      000082 9F                     191 	.db #0x9f	; 159
      000083 E1                     192 	.db #0xe1	; 225
      000084 DB                     193 	.db #0xdb	; 219
      000085 7F                     194 	.db #0x7f	; 127
      000086 67                     195 	.db #0x67	; 103	'g'
      000087 FF                     196 	.db #0xff	; 255
      000088 FF                     197 	.db #0xff	; 255
      000089 7F                     198 	.db #0x7f	; 127
      00008A C7                     199 	.db #0xc7	; 199
      00008B B9                     200 	.db #0xb9	; 185
      00008C A5                     201 	.db #0xa5	; 165
      00008D FF                     202 	.db #0xff	; 255
      00008E E7                     203 	.db #0xe7	; 231
      00008F BD                     204 	.db #0xbd	; 189
      000090 A5                     205 	.db #0xa5	; 165
      000091 FF                     206 	.db #0xff	; 255
      000092 7E                     207 	.db #0x7e	; 126
      000093 7E                     208 	.db #0x7e	; 126
      000094 2C                     209 	.db #0x2c	; 44
      000095 34                     210 	.db #0x34	; 52	'4'
      000096 2C                     211 	.db #0x2c	; 44
      000097 34                     212 	.db #0x34	; 52	'4'
      000098 3C                     213 	.db #0x3c	; 60
      000099 3C                     214 	.db #0x3c	; 60
      00009A                        215 _mouseData1:
      00009A 08                     216 	.db #0x08	; 8
      00009B 08                     217 	.db #0x08	; 8
      00009C 1C                     218 	.db #0x1c	; 28
      00009D 1C                     219 	.db #0x1c	; 28
      00009E 3E                     220 	.db #0x3e	; 62
      00009F 2A                     221 	.db #0x2a	; 42
      0000A0 3E                     222 	.db #0x3e	; 62
      0000A1 36                     223 	.db #0x36	; 54	'6'
      0000A2 26                     224 	.db #0x26	; 38
      0000A3 3A                     225 	.db #0x3a	; 58
      0000A4 1C                     226 	.db #0x1c	; 28
      0000A5 14                     227 	.db #0x14	; 20
      0000A6 1C                     228 	.db #0x1c	; 28
      0000A7 14                     229 	.db #0x14	; 20
      0000A8 2E                     230 	.db #0x2e	; 46
      0000A9 32                     231 	.db #0x32	; 50	'2'
      0000AA 2E                     232 	.db #0x2e	; 46
      0000AB 32                     233 	.db #0x32	; 50	'2'
      0000AC 26                     234 	.db #0x26	; 38
      0000AD 3A                     235 	.db #0x3a	; 58
      0000AE 22                     236 	.db #0x22	; 34
      0000AF 3E                     237 	.db #0x3e	; 62
      0000B0 1C                     238 	.db #0x1c	; 28
      0000B1 1C                     239 	.db #0x1c	; 28
      0000B2 08                     240 	.db #0x08	; 8
      0000B3 08                     241 	.db #0x08	; 8
      0000B4 0C                     242 	.db #0x0c	; 12
      0000B5 0C                     243 	.db #0x0c	; 12
      0000B6 04                     244 	.db #0x04	; 4
      0000B7 04                     245 	.db #0x04	; 4
      0000B8 04                     246 	.db #0x04	; 4
      0000B9 04                     247 	.db #0x04	; 4
                                    248 	.area _CODE
                                    249 	.area _INITIALIZER
      000000                        250 __xinit__vram:
      000000 00 80                  251 	.dw #0x8000
      000002                        252 __xinit__pallets:
      000002 00 90                  253 	.dw #0x9000
      000004                        254 __xinit__tilemap:
      000004 00 98                  255 	.dw #0x9800
      000006                        256 __xinit__InputData:
      000006 00 FF                  257 	.dw #0xff00
      000008                        258 __xinit__spriteAttributes:
      000008 00 FE                  259 	.dw #0xfe00
      00000A                        260 __xinit__requestData:
      00000A 20 00                  261 	.dw #0x0020
      00000C                        262 __xinit__smileyFace:
      00000C 32                     263 	.db #0x32	; 50	'2'
      00000D 32                     264 	.db #0x32	; 50	'2'
      00000E 00                     265 	.db #0x00	; 0
      00000F 12                     266 	.db #0x12	; 18
                                    267 	.area _CABS (ABS)
